// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../prisma/user-client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                BigInt         @id @default(autoincrement())
  is_deleted        Boolean        @default(false)
  user_code         String         @db.VarChar(255)
  name              String         @db.VarChar(255)
  display_name      String         @db.VarChar(255)
  company_id        BigInt
  company_branch_id BigInt
  profile           String?        @db.VarChar(255)
  email             String         @unique @db.VarChar(255)
  password          String         @db.VarChar(255)
  phone             String         @unique @db.VarChar(15)
  role_id           Int?           @db.SmallInt          
  current_address   String?        @db.VarChar(255)
  permanent_address String?        @db.VarChar(255)
  city              String?        @db.VarChar(255)
  postcode          Int?
  country           Int            @db.SmallInt
  state             Int?           @db.SmallInt
  created_by        Int?
  created_at        DateTime?      @default(now())
  updated_by        Int?
  updated_at        DateTime?
  UserRole          UserRole?      @relation(fields: [role_id], references: [id])
  Company           Company?       @relation(fields: [company_id], references: [id])
  CompanyBranch     CompanyBranch? @relation(fields: [company_branch_id], references: [id])
  UserLoginLog      UserLoginLog[] @relation
}

model UserRole {
  id          Int       @id @default(autoincrement())
  is_deleted  Boolean   @default(false)
  name        String    @unique @db.VarChar(255)
  description String?   @db.VarChar(255)
  created_by  Int?
  created_at  DateTime  @default(now())
  updated_by  Int?
  updated_at  DateTime?
  users       User[]    @relation
}

model UserLoginLog {
  id          BigInt      @id @default(autoincrement())
  is_deleted  Boolean  @default(false)
  status      Int
  mac_address String   @db.VarChar(50)
  user_id     BigInt
  system_info Json     @db.JsonB
  created_at  DateTime @default(now())
  user        User?    @relation(fields: [user_id], references: [id])
}

model Company {
  id            BigInt             @id @default(autoincrement())
  is_deleted    Boolean         @default(false)
  name          String          @unique @db.VarChar(255)
  description   String?         @db.VarChar(255)
  status        Int
  system_info   Json            @db.JsonB
  created_by    Int?
  created_at    DateTime        @default(now())
  updated_by    Int?
  updated_at    DateTime?
  users         User[]          @relation
  CompanyBranch CompanyBranch[] @relation
}

model CompanyBranch {
  id          BigInt       @id @default(autoincrement())
  is_deleted  Boolean   @default(false)
  company_id  BigInt       
  name        String    @unique @db.VarChar(255)
  description String?   @db.VarChar(255)
  status      Int
  system_info Json      @db.JsonB
  created_by  Int?
  created_at  DateTime  @default(now())
  updated_by  Int?
  updated_at  DateTime?
  users       User[]    @relation
  Company     Company?  @relation(fields: [company_id], references: [id])
}
